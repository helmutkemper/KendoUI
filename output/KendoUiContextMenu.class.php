<?php

  /**
   * Represents the Kendo UI ContextMenu widget. Inherits from Widget.
   * 
   * This class has been automatically generated by the class "classMaker.class.php" written by
   * Helmut Kemper <helmut.kemper@gmail.com> based into Kendo UI documents.
   * http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu
   * Important: This method does not remove the ContextMenu element from DOM.
   */
  class KendoUiContextMenu extends javascript
  {
    private $outputCStr;
    private $idElementCStr;
    private $nameVarCStr;
    private $htmlTagExtraCStr;
    
    function __construct ( $idElementAStr, $nameVarAStr = null, $htmlTagExtraAStr = null )
    {
      $this->idElementCStr = $idElementAStr;
      $this->nameVarCStr = $nameVarAStr;
      $this->htmlTagExtraCStr = $htmlTagExtraAStr;
    }
    
    //---------- inicio codigo importante
    //
    //Coisas que não serão apagadas podem ser digitadas aqui dentro.
    //
    
    public function toHtmlOutput ( $htmlIdAStr, $extraAStr )
    {
      self::$mainHtmlCodeCStr .= "<input id=\"{$htmlIdAStr}\" {$extraAStr}>";
    }
    
    
    //---------- fim codigo importante
    
    public function toJavaScriptOutput ()
    {
      if ( !is_null ( $this->nameVarCStr ) )
      {
        self::$mainJavaScriptCodeCStr .= "var {$this->nameVarCStr} = ";
      }
      self::$mainJavaScriptCodeCStr .= "$(\"#{$this->idElementCStr}\").KendoUiContextMenu({";
      self::$mainJavaScriptCodeCStr .= $this->toObject( $this->dataCArr );
      self::$mainJavaScriptCodeCStr .= "});\r\n";
      $this->dataCArr = null;
      return self::$mainJavaScriptCodeCStr;
    }
    
    /**
     * Specifies that ContextMenu should be shown aligned to the target or the filter element if specified.
     * @var $dataAX[ 'alignToAnchor' ]: ( Boolean ) ( default: false )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-alignToAnchor
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                alignToAnchor: true
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function alignToAnchor ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "alignToAnchor" => $dataAX );
      
      if ( is_bool ( $dataAX[ 'alignToAnchor' ] ) )
      {
        parent::addData ( "alignToAnchor", $dataAX[ 'alignToAnchor' ] );
        unset ( $dataAX[ 'alignToAnchor' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'alignToAnchor' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::alignToAnchor ( \$data[ 'alignToAnchor' ] type must be 'Boolean'" );
      }
      
    }
    
    
    /**
     * A collection of <strong>Animation</strong> objects, used to change default animations. A value of false will disable all animations in the widget.
     * Available animations for the <strong>ContextMenu</strong> are listed below. Each animation has a reverse options which is used for the <strong>close</strong> effect by default, but can be over-ridden by setting the <strong>close</strong> animation. Each animation also has a direction which can be set off the animation (i.e. <strong>slideIn:Down</strong>).
     * <b>slideIn</b> - ContextMenu content slides in from the top.
     * <b>fadeIn</b> - ContextMenu content fades in.
     * <b>expand</b> - ContextMenu content expands from the top down. Similar to slideIn.
     * @var $dataAX[ 'animation' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation
     * 
     * @code
       slideIn

ContextMenu content slides in from the top.

fadeIn

ContextMenu content fades in.

expand

ContextMenu content expands from the top down. Similar to slideIn.

Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                }
            });
        </script>
     * @endcode
     * 
     * The animation that will be used when closing sub menus.
     * @var $dataAX[ 'animation' ][ 'close' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.close
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * 
     * The animation that will be used when opening sub menus.
     * @var $dataAX[ 'animation' ][ 'open' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.open
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * 
     * Effect to be used when closing the popup.
     * @var $dataAX[ 'animation' ][ 'close' ][ 'effects' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.close.effects
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "zoomIn",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * 
     * Defines the close animation duration in milliseconds.
     * @var $dataAX[ 'animation' ][ 'close' ][ 'duration' ]: ( Number )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.close.duration
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "zoomIn",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * 
     * Effect to be used when opening the popup.
     * @var $dataAX[ 'animation' ][ 'open' ][ 'effects' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.open.effects
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "zoomIn",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * 
     * Defines the open animation duration in milliseconds.
     * @var $dataAX[ 'animation' ][ 'open' ][ 'duration' ]: ( Number )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-animation.open.duration
     * 
     * @code
       
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    close: {
                        effects: "slideIn:up"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "slideIn:down"
                    }
                }
            });
        </script>
     * @endcode
     * @code
        
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                animation: {
                    open: {
                        effects: "zoomIn",
                        duration: 100
                    }
                }
             });
        </script>
     * @endcode
     * @throws string type error
     */
    public function animation ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "animation" => $dataAX );
      
      if ( is_string ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] ) )
      {
        parent::addData ( "animation.close.effects", $dataAX[ 'animation' ][ 'close' ][ 'effects' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'close' ][ 'effects' ] type must be 'String'" );
      }
      
      if ( is_numeric ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] ) )
      {
        parent::addData ( "animation.close.duration", $dataAX[ 'animation' ][ 'close' ][ 'duration' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'close' ][ 'duration' ] type must be 'Number'" );
      }
      
      if ( is_string ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] ) )
      {
        parent::addData ( "animation.open.effects", $dataAX[ 'animation' ][ 'open' ][ 'effects' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'open' ][ 'effects' ] type must be 'String'" );
      }
      
      if ( is_numeric ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] ) )
      {
        parent::addData ( "animation.open.duration", $dataAX[ 'animation' ][ 'open' ][ 'duration' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'open' ][ 'duration' ] type must be 'Number'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ][ 'close' ] ) )
      {
        parent::addData ( "animation.close", $dataAX[ 'animation' ][ 'close' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'close' ] type must be 'Object'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ][ 'open' ] ) )
      {
        parent::addData ( "animation.open", $dataAX[ 'animation' ][ 'open' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ][ 'open' ] type must be 'Object'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ] ) )
      {
        parent::addData ( "animation", $dataAX[ 'animation' ] );
        unset ( $dataAX[ 'animation' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::animation ( \$data[ 'animation' ] type must be 'Object'" );
      }
      
    }
    
    
    /**
     * Specifies that sub menus should close after item selection (provided they won't navigate).
     * @var $dataAX[ 'closeOnClick' ]: ( Boolean ) ( default: true )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-closeOnClick
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                closeOnClick: false
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function closeOnClick ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "closeOnClick" => $dataAX );
      
      if ( is_bool ( $dataAX[ 'closeOnClick' ] ) )
      {
        parent::addData ( "closeOnClick", $dataAX[ 'closeOnClick' ] );
        unset ( $dataAX[ 'closeOnClick' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'closeOnClick' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::closeOnClick ( \$data[ 'closeOnClick' ] type must be 'Boolean'" );
      }
      
    }
    
    
    /**
     * The data source of the widget which is used to render its items. Can be a JSON object/Array that contains an item or an Array of items to be rendered. Refer to the example below for a list of the supported properties.
     * @var $dataAX[ 'dataSource' ]: ( Object | Array )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-dataSource
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $(document).ready(function() {
                $("#context-menu").kendoContextMenu({
                    target: "#target",
                    dataSource:
                        [{
                            text: "Item 1",
                            cssClass: "myClass",                         // Add custom CSS class to the item, optional, added 2012 Q3 SP1.
                            url: "http://www.kendoui.com"                // Link URL if navigation is needed, optional.
                        },
                        {
                            text: "<b>Item 2</b>",
                            encoded: false,                              // Allows use of HTML for item text
                            content: "text"                              // content within an item
                        },
                        {
                            text: "Item 3",
                            imageUrl: "http://www.kendoui.com/test.jpg", // Item image URL, optional.
                            items: [{                                    // Sub item collection
                                 text: "Sub Item 1"
                            },
                            {
                                 text: "Sub Item 2"
                            }]
                        },
                        {
                            text: "Item 4",
                            spriteCssClass: "imageClass3"                // Item image sprite CSS class, optional.
                        }]
                })
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function dataSource ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "dataSource" => $dataAX );
      
      if ( is_array ( $dataAX[ 'dataSource' ] ) )
      {
        parent::addData ( "dataSource", $dataAX[ 'dataSource' ] );
        unset ( $dataAX[ 'dataSource' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'dataSource' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::dataSource ( \$data[ 'dataSource' ] type must be 'Object' | 'Array'" );
      }
      
    }
    
    
    /**
     * Specifies ContextMenu's sub menu opening direction. Can be "top", "bottom", "left", "right". The example below will initialize the sub menus to open to the left.
     * @var $dataAX[ 'direction' ]: ( String ) ( default: "default" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-direction
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                direction: "left"
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function direction ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "direction" => $dataAX );
      
      if ( is_string ( $dataAX[ 'direction' ] ) )
      {
        parent::addData ( "direction", $dataAX[ 'direction' ] );
        unset ( $dataAX[ 'direction' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'direction' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::direction ( \$data[ 'direction' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specifies ContextMenu filter selector - the ContextMenu will only be shown on items that satisfy the provided selector.
     * @var $dataAX[ 'filter' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-filter
     * 
     * @code
       Show the ContextMenu on some elements inside the target
        <div id="target">Target
            <div class="box"></div>
            <div></div>
            <div class="box"></div>
        </div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                filter: ".box"
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function filter ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "filter" => $dataAX );
      
      if ( is_string ( $dataAX[ 'filter' ] ) )
      {
        parent::addData ( "filter", $dataAX[ 'filter' ] );
        unset ( $dataAX[ 'filter' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'filter' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::filter ( \$data[ 'filter' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specifies the delay in ms before the sub menus are opened/closed - used to avoid accidental closure on leaving.
     * @var $dataAX[ 'hoverDelay' ]: ( Number ) ( default: 100 )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-hoverDelay
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                hoverDelay: 200
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function hoverDelay ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "hoverDelay" => $dataAX );
      
      if ( is_numeric ( $dataAX[ 'hoverDelay' ] ) )
      {
        parent::addData ( "hoverDelay", $dataAX[ 'hoverDelay' ] );
        unset ( $dataAX[ 'hoverDelay' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'hoverDelay' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::hoverDelay ( \$data[ 'hoverDelay' ] type must be 'Number'" );
      }
      
    }
    
    
    /**
     * Root menu orientation. Could be horizontal or vertical.
     * @var $dataAX[ 'orientation' ]: ( String ) ( default: "vertical" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-orientation
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                orientation: "horizontal"
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function orientation ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "orientation" => $dataAX );
      
      if ( is_string ( $dataAX[ 'orientation' ] ) )
      {
        parent::addData ( "orientation", $dataAX[ 'orientation' ] );
        unset ( $dataAX[ 'orientation' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'orientation' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::orientation ( \$data[ 'orientation' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specifies how ContextMenu should adjust to screen boundaries. By default the strategy is <strong>"fit"</strong> for a sub menu with a horizontal parent or the root menu, meaning it will move to fit in screen boundaries in all directions, and <strong>"fit flip"</strong> for a sub menu with vertical parent, meaning it will fit vertically and flip over its parent horizontally. You can also switch off the screen boundary detection completely if you set the <strong>popupCollision</strong> to false.
     * @var $dataAX[ 'popupCollision' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-popupCollision
     * 
     * @code
       Example
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                popupCollision: false
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function popupCollision ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "popupCollision" => $dataAX );
      
      if ( is_string ( $dataAX[ 'popupCollision' ] ) )
      {
        parent::addData ( "popupCollision", $dataAX[ 'popupCollision' ] );
        unset ( $dataAX[ 'popupCollision' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'popupCollision' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::popupCollision ( \$data[ 'popupCollision' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specifies the event or events on which ContextMenu should open. By default ContextMenu will show on <em>contextmenu</em> event on desktop and <em>hold</em> event on touch devices. Could be any pointer/mouse/touch event, also several, separated by spaces.
     * @var $dataAX[ 'showOn' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-showOn
     * 
     * @code
       Show the ContextMenu on left click
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target",
                showOn: "click"
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function showOn ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "showOn" => $dataAX );
      
      if ( is_string ( $dataAX[ 'showOn' ] ) )
      {
        parent::addData ( "showOn", $dataAX[ 'showOn' ] );
        unset ( $dataAX[ 'showOn' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'showOn' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::showOn ( \$data[ 'showOn' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specifies the element on which ContextMenu should open. The default element is the document body.
     * @var $dataAX[ 'target' ]: ( String | jQuery ) ( default: "body" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/contextmenu#configuration-target
     * 
     * @code
       Show the ContextMenu on element with ID target
        <div id="target">Target</div>
        <ul id="context-menu">
            <li>Item 1
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
            <li>Item 2
                <ul>
                    <li>Sub Item 1</li>
                    <li>Sub Item 2</li>
                    <li>Sub Item 3</li>
                </ul>
            </li>
        </ul>
        <script>
            $("#context-menu").kendoContextMenu({
                target: "#target"
            });
        </script>
     * @endcode
     * @throws string type error
     */
    public function target ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "target" => $dataAX );
      
      if ( is_string ( $dataAX[ 'target' ] ) )
      {
        parent::addData ( "target", $dataAX[ 'target' ] );
        unset ( $dataAX[ 'target' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'target' ] ) )
      {
        throw new Exception ( "Type error - KendoUiContextMenu::target ( \$data[ 'target' ] type must be 'String' | 'jQuery'" );
      }
      
    }
    
    
  }