<?php

  /**
   * Used to group sets of draggable and drop targets. A draggable with the same group value as a drop target will be accepted by the drop target.
   * 
   * This class has been automatically generated by the class "classMaker.class.php" written by
   * Helmut Kemper <helmut.kemper@gmail.com> based into Kendo UI documents.
   * http://docs.telerik.com/kendo-ui/api/javascript/ui/droptarget
   * 
   */
  class KendoUiDropTarget extends javascript
  {
    private $outputCStr;
    private $idElementCStr;
    private $nameVarCStr;
    private $htmlTagExtraCStr;
    
    function __construct ( $idElementAStr, $nameVarAStr = null, $htmlTagExtraAStr = null )
    {
      $this->idElementCStr = $idElementAStr;
      $this->nameVarCStr = $nameVarAStr;
      $this->htmlTagExtraCStr = $htmlTagExtraAStr;
    }
    
    //---------- inicio codigo importante
    //
    //Coisas que não serão apagadas podem ser digitadas aqui dentro.
    //
    
    public function toHtmlOutput ()
    {
      self::$mainHtmlCodeCStr .= "<input id=\"{$this->idElementCStr}\" {$this->htmlTagExtraCStr}>";
      return self::$mainHtmlCodeCStr;
    }
    
    
    //---------- fim codigo importante
    
    public function toJavaScriptOutput ()
    {
      if ( !is_null ( $this->nameVarCStr ) )
      {
        self::$mainJavaScriptCodeCStr .= "var {$this->nameVarCStr} = ";
      }
      self::$mainJavaScriptCodeCStr .= "$(\"#{$this->idElementCStr}\").KendoUiDropTarget({";
      self::$mainJavaScriptCodeCStr .= $this->toObject( $this->dataCArr );
      self::$mainJavaScriptCodeCStr .= "});\r\n";
      $this->dataCArr = null;
      return self::$mainJavaScriptCodeCStr;
    }
    
    /**
     * Used to group sets of draggable and drop targets. A draggable with the same group value as a drop target will be accepted by the drop target.
     * @var $dataAX[ 'group' ]: ( String ) ( default: "default" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/droptarget#configuration-group
     * 
     * @code
       Example
        <div class="orange"></div>
        <div class="orange"></div>
        <div class="purple"></div>
        <div class="purple"></div>
        <div id="orangeArea"></div>
        <div id="purpleArea"></div>
        
        <script>
          $(".orange").kendoDraggable({
            group: "orangeGroup",
            hint: function(element) {
              return element.clone();
            }
          });
        
          $(".purple").kendoDraggable({
            group: "purpleGroup",
            hint: function(element) {
              return element.clone();
            }
          });
        
          $("#orangeArea").kendoDropTarget({ group: "orangeGroup", drop: onDrop });
          $("#purpleArea").kendoDropTarget({ group: "purpleGroup", drop: onDrop });
        
          function onDrop(e) {
            e.draggable.destroy();
            e.draggable.element.remove();
          }
        </script>
        <style>
          .orange, .purple{
            width: 50px;
            height: 50px;
            border: 2px solid green;
            margin: 5px;
          }
          #orangeArea, #purpleArea {
            width: 200px;
            height: 200px;
            border: 2px solid green;
            margin: 5px;
          }
          .orange, #orangeArea { background-color: orange; }
          .purple, #purpleArea { background-color: purple; }
        </style>
     * @endcode
     * @throws string type error
     */
    public function group ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "group" => $dataAX );
      
      if ( is_string ( $dataAX[ 'group' ] ) )
      {
        parent::addData ( "group", $dataAX[ 'group' ] );
        unset ( $dataAX[ 'group' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'group' ] ) )
      {
        throw new Exception ( "Type error - KendoUiDropTarget::group ( \$data[ 'group' ] type must be 'String'" );
      }
      
    }
    
    
  }