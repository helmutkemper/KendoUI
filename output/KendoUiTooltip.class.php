<?php

  /**
   * Represents the Kendo UI Tooltip. Inherits from Widget.
   * 
   * This class has been automatically generated by the class "classMaker.class.php" written by
   * Helmut Kemper <helmut.kemper@gmail.com> based into Kendo UI documents.
   * http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip
   * Note: For URLs starting with a protocol (e.g. http://),
a container iframe element is automatically created. This behavior may change in future
versions, so it is advisable to always use the iframe configuration option.
   */
  class KendoUiTooltip extends javascript
  {
    private $outputCStr;
    
    //---------- inicio codigo importante
    //
    //Coisas que não serão apagadas podem ser digitadas aqui dentro.
    //
    
    public function toHtmlOutput ( $htmlIdAStr, $extraAStr )
    {
      self::$mainHtmlCodeCStr .= "<input id=\"{$htmlIdAStr}\" {$extraAStr}>";
    }
    
    
    //---------- fim codigo importante
    
    public function toJavaScriptOutput ( $htmlIdALStr, $jsVarALStr = null )
    {
      if ( !is_null ( $jsVarALStr ) )
      {
        self::$mainJavaScriptCodeCStr .= "var {$jsVarALStr} = ";
      }
      self::$mainJavaScriptCodeCStr .= "$(\"#{$htmlIdALStr}\").KendoUiTooltip({\r\n";
      self::$mainJavaScriptCodeCStr .= self::toObject( javascript::$dataCArr );
      self::$mainJavaScriptCodeCStr .= "});\r\n";
      self::$dataCArr = null;
    }
    
    /**
     * Specifies if the Tooltip will be hidden when mouse leaves the target element. If set to false a close button will be shown within Tooltip. If set to false, showAfter is specified and the showOn is set to "mouseenter" the Tooltip will be displayed after the given timeout even if the element is no longer hovered.
     * @var $dataAX[ 'autoHide' ]: ( Boolean ) ( default: true )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-autoHide
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;autoHide: false<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function autoHide ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "autoHide" => $dataAX );
      
      if ( is_bool ( $dataAX[ 'autoHide' ] ) )
      {
        parent::addData ( "autoHide", $dataAX[ 'autoHide' ] );
        unset ( $dataAX[ 'autoHide' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'autoHide' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::autoHide ( \$data[ 'autoHide' ] type must be 'Boolean'" );
      }
      
    }
    
    
    /**
     * A collection of {Animation} objects, used to change default animations. A value of <strong>false</strong> will disable all animations in the widget.
     * @var $dataAX[ 'animation' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: false<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * The animation that will be used when a Tooltip closes.
     * @var $dataAX[ 'animation' ][ 'close' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.close
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * The animation that will be used when a Tooltip opens.
     * @var $dataAX[ 'animation' ][ 'open' ]: ( Object )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.open
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * Effect to be used for closing of the Tooltip.
     * @var $dataAX[ 'animation' ][ 'close' ][ 'effects' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.close.effects
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: "1000"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * Defines the animation duration.
     * @var $dataAX[ 'animation' ][ 'close' ][ 'duration' ]: ( Number )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.close.duration
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: "1000"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * Effect to be used for opening of the Tooltip.
     * @var $dataAX[ 'animation' ][ 'open' ][ 'effects' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.open.effects
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: "1000"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * Defines the animation duration.
     * @var $dataAX[ 'animation' ][ 'open' ][ 'duration' ]: ( Number )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-animation.open.duration
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:out"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;close: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effects: "fade:in"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some Content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;animation: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;duration: "1000"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function animation ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "animation" => $dataAX );
      
      if ( is_string ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] ) )
      {
        parent::addData ( "animation.close.effects", $dataAX[ 'animation' ][ 'close' ][ 'effects' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ][ 'effects' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'close' ][ 'effects' ] type must be 'String'" );
      }
      
      if ( is_numeric ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] ) )
      {
        parent::addData ( "animation.close.duration", $dataAX[ 'animation' ][ 'close' ][ 'duration' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ][ 'duration' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'close' ][ 'duration' ] type must be 'Number'" );
      }
      
      if ( is_string ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] ) )
      {
        parent::addData ( "animation.open.effects", $dataAX[ 'animation' ][ 'open' ][ 'effects' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ][ 'effects' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'open' ][ 'effects' ] type must be 'String'" );
      }
      
      if ( is_numeric ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] ) )
      {
        parent::addData ( "animation.open.duration", $dataAX[ 'animation' ][ 'open' ][ 'duration' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ][ 'duration' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'open' ][ 'duration' ] type must be 'Number'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ][ 'close' ] ) )
      {
        parent::addData ( "animation.close", $dataAX[ 'animation' ][ 'close' ] );
        unset ( $dataAX[ 'animation' ][ 'close' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'close' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'close' ] type must be 'Object'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ][ 'open' ] ) )
      {
        parent::addData ( "animation.open", $dataAX[ 'animation' ][ 'open' ] );
        unset ( $dataAX[ 'animation' ][ 'open' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ][ 'open' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ][ 'open' ] type must be 'Object'" );
      }
      
      if ( is_array ( $dataAX[ 'animation' ] ) )
      {
        parent::addData ( "animation", $dataAX[ 'animation' ] );
        unset ( $dataAX[ 'animation' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'animation' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::animation ( \$data[ 'animation' ] type must be 'Object'" );
      }
      
    }
    
    
    /**
     * The text or a function which result will be shown within the Tooltip. By default the Tooltip will display the target element title attribute content.
     * @var $dataAX[ 'content' ]: ( Object | String | Function )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-content
     * 
     * @code
       &lt;div id="container"&gt;<br>&nbsp;&nbsp;&lt;span&gt;Some content&lt;/span&gt;<br>&nbsp;&nbsp;&lt;span&gt;Some more content&lt;/span&gt;<br>&lt;/div&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#container").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;filter: "span",<br>&nbsp;&nbsp;&nbsp;&nbsp;content: function(e) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var target = e.target; // the element for which the tooltip is shown<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return target.text(); // set the element text as content of the tooltip<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @code
        &lt;span id="target"&gt;<br>&nbsp;&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;content: "Tooltip content!"<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * 
     * Specifies a URL or request options that the Tooltip should load its content from.
     * Note: For URLs starting with a protocol (e.g. http://),
a container iframe element is automatically created. This behavior may change in future
versions, so it is advisable to always use the <a href="#iframe">iframe configuration option</a>.
     * 
     * ( ! ) Note: For URLs starting with a protocol (e.g. http://),
     * a container iframe element is automatically created. This behavior may change in future
     * versions, so it is advisable to always use the <a href="#iframe">iframe configuration option</a>.
     * @var $dataAX[ 'content' ][ 'url' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-content.url
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;content: {<br>&nbsp;&nbsp;&nbsp;&nbsp;url: "http://demos.telerik.com/kendo-ui/content/web/tooltip/ajax/ajaxContent3.html"<br>&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;width: 220,<br>&nbsp;&nbsp;&nbsp;height: 280<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function content ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "content" => $dataAX );
      
      if ( is_string ( $dataAX[ 'content' ][ 'url' ] ) )
      {
        parent::addData ( "content.url", $dataAX[ 'content' ][ 'url' ] );
        unset ( $dataAX[ 'content' ][ 'url' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'content' ][ 'url' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::content ( \$data[ 'content' ][ 'url' ] type must be 'String'" );
      }
      
      if ( is_array ( $dataAX[ 'content' ] ) )
      {
        parent::addData ( "content", $dataAX[ 'content' ] );
        unset ( $dataAX[ 'content' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( is_string ( $dataAX[ 'content' ] ) )
      {
        parent::addData ( "content", $dataAX[ 'content' ] );
        unset ( $dataAX[ 'content' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'content' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::content ( \$data[ 'content' ] type must be 'Object' | 'String' | 'Function'" );
      }
      
    }
    
    
    /**
     * Specifies if the Tooltip callout will be displayed.
     * @var $dataAX[ 'callout' ]: ( Boolean ) ( default: true )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-callout
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;callout: false<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function callout ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "callout" => $dataAX );
      
      if ( is_bool ( $dataAX[ 'callout' ] ) )
      {
        parent::addData ( "callout", $dataAX[ 'callout' ] );
        unset ( $dataAX[ 'callout' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'callout' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::callout ( \$data[ 'callout' ] type must be 'Boolean'" );
      }
      
    }
    
    
    /**
     * Specifies a selector for elements, within the container, for which the Tooltip will be displayed.
     * @var $dataAX[ 'filter' ]: ( String )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-filter
     * 
     * @code
       &lt;div id="container"&gt;<br>&nbsp;&nbsp;I'm a &lt;strong title="First target"&gt;tooltip target&lt;/strong&gt;. I'm also a<br>&nbsp;&nbsp;&lt;strong title="Second target"&gt;tooltip target&lt;/strong&gt;.<br>&lt;/div&gt;<br><br>&lt;script&gt;<br>&nbsp;&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;&nbsp;$("#container").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;&nbsp;filter: "strong"<br>&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function filter ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "filter" => $dataAX );
      
      if ( is_string ( $dataAX[ 'filter' ] ) )
      {
        parent::addData ( "filter", $dataAX[ 'filter' ] );
        unset ( $dataAX[ 'filter' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'filter' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::filter ( \$data[ 'filter' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Explicitly states whether content iframe should be created.
     * @var $dataAX[ 'iframe' ]: ( Boolean )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-iframe
     * @throws string type error
     */
    public function iframe ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "iframe" => $dataAX );
      
      if ( is_bool ( $dataAX[ 'iframe' ] ) )
      {
        parent::addData ( "iframe", $dataAX[ 'iframe' ] );
        unset ( $dataAX[ 'iframe' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'iframe' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::iframe ( \$data[ 'iframe' ] type must be 'Boolean'" );
      }
      
    }
    
    
    /**
     * The height (in pixels) of the Tooltip.
     * @var $dataAX[ 'height' ]: ( Number ) ( default: Infinity )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-height
     * 
     * @code
       &lt;span id="target" title="Tooltip long content"&gt;<br>&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;height: 80<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function height ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "height" => $dataAX );
      
      if ( is_numeric ( $dataAX[ 'height' ] ) )
      {
        parent::addData ( "height", $dataAX[ 'height' ] );
        unset ( $dataAX[ 'height' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'height' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::height ( \$data[ 'height' ] type must be 'Number'" );
      }
      
    }
    
    
    /**
     * The width (in pixels) of the Tooltip.
     * @var $dataAX[ 'width' ]: ( Number ) ( default: Infinity )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-width
     * 
     * @code
       &lt;span id="target" title="Tooltip long content"&gt;<br>&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;width: 180<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function width ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "width" => $dataAX );
      
      if ( is_numeric ( $dataAX[ 'width' ] ) )
      {
        parent::addData ( "width", $dataAX[ 'width' ] );
        unset ( $dataAX[ 'width' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'width' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::width ( \$data[ 'width' ] type must be 'Number'" );
      }
      
    }
    
    
    /**
     * The position relative to the target element, at which the Tooltip will be shown. Predefined values are "bottom", "top", "left", "right", "center".
     * @var $dataAX[ 'position' ]: ( String ) ( default: "bottom" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-position
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;position: "right"<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function position ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "position" => $dataAX );
      
      if ( is_string ( $dataAX[ 'position' ] ) )
      {
        parent::addData ( "position", $dataAX[ 'position' ] );
        unset ( $dataAX[ 'position' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'position' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::position ( \$data[ 'position' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Specify the delay in milliseconds before the Tooltip is shown. This option is ignored if <b><u>showOn</u></b> is set to "click" or "focus".
     * @var $dataAX[ 'showAfter' ]: ( Number ) ( default: 100 )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-showAfter
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;Some content<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;showAfter: 1000<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function showAfter ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "showAfter" => $dataAX );
      
      if ( is_numeric ( $dataAX[ 'showAfter' ] ) )
      {
        parent::addData ( "showAfter", $dataAX[ 'showAfter' ] );
        unset ( $dataAX[ 'showAfter' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'showAfter' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::showAfter ( \$data[ 'showAfter' ] type must be 'Number'" );
      }
      
    }
    
    
    /**
     * The event on which the Tooltip will be shown. Predefined values are "mouseenter", "click" and "focus".
     * @var $dataAX[ 'showOn' ]: ( String ) ( default: "mouseenter" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/tooltip#configuration-showOn
     * 
     * @code
       &lt;span id="target" title="Tooltip content"&gt;<br>&nbsp;Click Me<br>&lt;/span&gt;<br><br>&lt;script&gt;<br>&nbsp;$(document).ready(function() {<br>&nbsp;&nbsp;$("#target").kendoTooltip({<br>&nbsp;&nbsp;&nbsp;showOn: "click"<br>&nbsp;&nbsp;});<br>&nbsp;});<br>&lt;/script&gt;
     * @endcode
     * @throws string type error
     */
    public function showOn ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "showOn" => $dataAX );
      
      if ( is_string ( $dataAX[ 'showOn' ] ) )
      {
        parent::addData ( "showOn", $dataAX[ 'showOn' ] );
        unset ( $dataAX[ 'showOn' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'showOn' ] ) )
      {
        throw new Exception ( "Type error - KendoUiTooltip::showOn ( \$data[ 'showOn' ] type must be 'String'" );
      }
      
    }
    
    
  }