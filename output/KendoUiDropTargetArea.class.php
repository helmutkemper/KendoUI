<?php

  /**
   * Used to group sets of draggable and drop targets. A draggable with the same group value as a drop target will be accepted by the drop target.
   * 
   * This class has been automatically generated by the class "classMaker.class.php" written by
   * Helmut Kemper <helmut.kemper@gmail.com> based into Kendo UI documents.
   * http://docs.telerik.com/kendo-ui/api/javascript/ui/droptargetarea
   * 
   */
  class KendoUiDropTargetArea extends javascript
  {
    private $outputCStr;
    private $idElementCStr;
    private $nameVarCStr;
    private $htmlTagExtraCStr;
    
    function __construct ( $idElementAStr, $nameVarAStr = null, $htmlTagExtraAStr = null )
    {
      $this->idElementCStr = $idElementAStr;
      $this->nameVarCStr = $nameVarAStr;
      $this->htmlTagExtraCStr = $htmlTagExtraAStr;
    }
    
    //---------- inicio codigo importante
    //
    //Coisas que não serão apagadas podem ser digitadas aqui dentro.
    //
    
    public function toHtmlOutput ()
    {
      self::$mainHtmlCodeCStr .= "<input id=\"{$this->idElementCStr}\" {$this->htmlTagExtraCStr}>";
      return self::$mainHtmlCodeCStr;
    }
    
    
    //---------- fim codigo importante
    
    public function toJavaScriptOutput ()
    {
      if ( !is_null ( $this->nameVarCStr ) )
      {
        self::$mainJavaScriptCodeCStr .= "var {$this->nameVarCStr} = ";
      }
      self::$mainJavaScriptCodeCStr .= "$(\"#{$this->idElementCStr}\").KendoUiDropTargetArea({";
      self::$mainJavaScriptCodeCStr .= $this->toObject( $this->dataCArr );
      self::$mainJavaScriptCodeCStr .= "});\r\n";
      $this->dataCArr = null;
      return self::$mainJavaScriptCodeCStr;
    }
    
    /**
     * Used to group sets of draggable and drop targets. A draggable with the same group value as a drop target will be accepted by the drop target.
     * @var $dataAX[ 'group' ]: ( String ) ( default: "default" )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/droptargetarea#configuration-group
     * 
     * @code
       Example
        <p>Area accepts only draggable elements from orange group</p>
        <div id="area">
          <div id="leftArea"></div>
          <div id="rightArea"></div>
        </div>
        <div class="orange"></div>
        <div class="orange"></div>
        <div class="purple"></div>
        
        <script>
          $(".orange").kendoDraggable({
            group: "orangeGroup",
            hint: function(element) {
              return element.clone();
            }
          });
        
          $(".purple").kendoDraggable({
            group: "purpleGroup",
            hint: function(element) {
              return element.clone();
            }
          });
        
          $("#area").kendoDropTargetArea({ 
              group: "orangeGroup",
              filter: "#leftArea, #rightArea",
              drop: onDrop
          });
        
          function onDrop(e) {
            e.draggable.destroy();
            e.draggable.element.css("opacity", 0.3);
          }
        </script>
        <style>
          .orange, .purple{
            width: 50px;
            height: 50px;
            border: 2px solid green;
            margin: 5px;
            display: inline-block;
          }
          .orange { background-color: orange; }
          .purple { background-color: purple; }
          #area {
              width: 300px;
              height: 300px;
              line-height: 300px;
              background-color: gray;
          }
          #leftArea, #rightArea {
            width: 140px;
            height: 100px;
            border: 2px solid green;
            margin: 2px;
            background-color: orange;
            display: inline-block;
            vertical-align: middle;
          }
        </style>
     * @endcode
     * @throws string type error
     */
    public function group ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "group" => $dataAX );
      
      if ( is_string ( $dataAX[ 'group' ] ) )
      {
        parent::addData ( "group", $dataAX[ 'group' ] );
        unset ( $dataAX[ 'group' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'group' ] ) )
      {
        throw new Exception ( "Type error - KendoUiDropTargetArea::group ( \$data[ 'group' ] type must be 'String'" );
      }
      
    }
    
    
    /**
     * Selector to filter the drop targets in the area. Every matched element acts as a drop target and fires events on the DropTargetArea. <strong>Specifying the filter is mandatory.</strong>
     * @var $dataAX[ 'filter' ]: ( String ) ( default: null )
     * @see http://docs.telerik.com/kendo-ui/api/javascript/ui/droptargetarea#configuration-filter
     * 
     * @code
       Example
        <p>Area accepts only draggable elements from orange group</p>
        <div id="area">
          <div id="droptarget" class="orange"></div>
        </div>
        <div id="draggable" class="purple"></div>
        
        <script>
          $("#draggable").kendoDraggable({
            hint: function(element) {
              return element.clone();
            }
          });
        
          $("#area").kendoDropTargetArea({ 
              filter: "#droptarget",
              drop: onDrop
          });
        
          function onDrop(e) {
            e.dropTarget.toggleClass("orange").toggleClass("purple");
            e.draggable.element.toggleClass("orange").toggleClass("purple");
          }
        </script>
        <style>
          #draggable {
            width: 50px;
            height: 50px;
            border: 2px solid green;
            margin: 5px;
            display: inline-block;
          }
          .orange { background-color: orange; }
          .purple { background-color: purple; }
          #area {
              width: 300px;
              height: 300px;
              line-height: 300px;
              background-color: gray;
          }
          #droptarget {
            width: 100px;
            height: 100px;
            border: 2px solid green;
            margin: 0 96px;
            display: inline-block;
            vertical-align: middle;
          }
        </style>
     * @endcode
     * @throws string type error
     */
    public function filter ( $dataAX )
    {
      if ( !is_string ( $this->outputCStr ) )
      {
        $this->outputCStr = '';
      }
      
      $dataAX = array ( "filter" => $dataAX );
      
      if ( is_string ( $dataAX[ 'filter' ] ) )
      {
        parent::addData ( "filter", $dataAX[ 'filter' ] );
        unset ( $dataAX[ 'filter' ] );
        parent::garbageCollector ( $dataAX );
      }
      else if ( isset ( $dataAX[ 'filter' ] ) )
      {
        throw new Exception ( "Type error - KendoUiDropTargetArea::filter ( \$data[ 'filter' ] type must be 'String'" );
      }
      
    }
    
    
  }